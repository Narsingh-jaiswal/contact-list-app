{"version":3,"sources":["components/table-component/table.js","components/form-component/form.js","App.js","reportWebVitals.js","index.js"],"names":["userIndex","Form","props","className","onSubmit","event","preventDefault","userFormData","userFormHandler","add","value","firstName","onChange","e","target","trim","required","lastName","contact","isNaN","alert","length","edit","type","onClick","setEdit","Table","useState","table","tablehandler","handler","useEffect","user","userData","deleteData","splice","parseInt","list","map","element","index","App","userForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b95d34b1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './table.css'\r\nvar userIndex;\r\nconst Table = (props) => {\r\n  const [table, tablehandler] = useState([])\r\n\r\n  useEffect(() => {\r\n    const user = props.userData\r\n    if (props.edit) {\r\n      table[userIndex] = {\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        contact: user.contact\r\n      }\r\n    }\r\n    if (props.userData.add) {\r\n      tablehandler([...table, props.userData])\r\n      props.handler({\r\n        firstName: '',\r\n        lastName: '',\r\n        contact: '',\r\n      })\r\n    }\r\n  })\r\n\r\n  function edit(e) {\r\n    userIndex = e.target.value\r\n    props.handler({\r\n      firstName: table[userIndex].firstName,\r\n      lastName: table[userIndex].lastName,\r\n      contact: table[userIndex].contact,\r\n      add: false,\r\n    })\r\n    props.setEdit(true)\r\n  }\r\n\r\n  const deleteData = (e) => {\r\n    table.splice(parseInt(e.target.value), 1)\r\n    tablehandler([...table])\r\n  }\r\n\r\n  const list = table.map((element, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td className=\"table-data\"><p>{index + 1}</p></td>\r\n        <td className=\"table-data\"><p>{element.firstName}</p></td>\r\n        <td className=\"table-data\"><p>{element.lastName}</p></td>\r\n        <td className=\"table-data\"><p>{element.contact}</p></td>\r\n        <td className=\"table-data\">\r\n          <button value={index} onClick={edit}>\r\n            edit\r\n            {/* <i className=\"material-icons\">edit</i> */}\r\n          </button>\r\n        </td>\r\n        <td className=\"table-data\">\r\n          <button value={index} onClick={deleteData}>\r\n            delete\r\n            {/* <i className=\"material-icons\">delete</i> */}\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n  return (\r\n    <>\r\n      <div className=\"table-container\">\r\n        <h1>User list</h1>\r\n        <table>\r\n          <thead>\r\n            <tr className=\"table-head\">\r\n              <th className=\"list-thead\">#</th>\r\n              <th className=\"list-thead\">First Name</th>\r\n              <th className=\"list-thead\">Last Name</th>\r\n              <th className=\"list-thead\">Contact</th>\r\n              <th className=\"list-thead\">Edit</th>\r\n              <th className=\"list-thead\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {list}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default Table","import React from 'react'\r\nimport './form.css'\r\nconst Form = (props) => {\r\n  function add(event) {\r\n    event.preventDefault()\r\n    const user = props.userFormData\r\n    props.userFormHandler({ ...props.userFormData, add: true })\r\n  }\r\n\r\n  const update = () => {\r\n    props.setEdit(false)\r\n    props.userFormHandler({\r\n      firstName: '',\r\n      lastName: '',\r\n      contact: '',\r\n    })\r\n  }\r\n\r\n  const cancle = () => {\r\n    props.setEdit(false)\r\n    props.userFormHandler({\r\n      firstName: '',\r\n      lastName: '',\r\n      contact: '',\r\n    })\r\n  }\r\n  const contact = (event) => {\r\n    if (isNaN(event.target.value)) {\r\n      alert(\"enter only numeric value\")\r\n    } else {\r\n      if (props.userFormData.contact.length > 10) {\r\n        alert('contact number limit exceeded')\r\n      }\r\n      else {\r\n        props.userFormHandler({\r\n          ...props.userFormData,\r\n          contact: event.target.value.trim()\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-container\">\r\n        <h1>Registration Form</h1>\r\n        <form onSubmit={add}>\r\n          <label>First Name :</label>\r\n          <input value={props.userFormData.firstName}\r\n            onChange={e => props.userFormHandler({ ...props.userFormData, firstName: e.target.value.trim() })} required />\r\n          <label>Last Name :</label>\r\n          <input value={props.userFormData.lastName}\r\n            onChange={e => props.userFormHandler({ ...props.userFormData, lastName: e.target.value.trim() })} required />\r\n          <label>Contact : </label>\r\n          <input value={props.userFormData.contact}\r\n            onChange={contact} required />\r\n          {!props.edit && <button type=\"submit\">Submit</button>}\r\n          {props.edit &&\r\n            <div className=\"update-section\">\r\n              <button onClick={update}>Update</button>\r\n              <button onClick={cancle}>Cancel</button>\r\n            </div>\r\n          }\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default Form","import Form from \"./components/form-component/form\";\r\nimport Table from \"./components/table-component/table\";\r\nimport './App.css';\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [userForm, userFormHandler] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    contact: '',\r\n    add: false,\r\n  })\r\n  const [edit, setEdit] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-table-contaier\">\r\n        <Form\r\n          userFormData={userForm}\r\n          userFormHandler={userFormHandler}\r\n          edit={edit}\r\n          setEdit={setEdit} />\r\n        <Table\r\n          userData={userForm}\r\n          handler={userFormHandler}\r\n          edit={edit}\r\n          setEdit={setEdit} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
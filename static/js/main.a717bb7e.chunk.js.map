{"version":3,"sources":["components/table-component/table.js","components/form-component/form.js","App.js","reportWebVitals.js","index.js"],"names":["userIndex","Form","props","className","onSubmit","event","preventDefault","user","userFormData","firstName","lastName","contact","userFormHandler","add","alert","value","onChange","e","target","trimStart","console","log","parseInt","isNaN","length","edit","type","onClick","setEdit","Table","useState","table","tablehandler","handler","useEffect","userData","deleteData","splice","list","map","element","index","App","userForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a717bb7e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './table.css'\r\nvar userIndex;\r\nconst Table = (props) => {\r\n  const [table, tablehandler] = useState([])\r\n\r\n  useEffect(() => {\r\n    const user = props.userData\r\n    if (props.edit) {\r\n      table[userIndex] = {\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        contact: user.contact\r\n      }\r\n    }\r\n    if (props.userData.add) {\r\n      tablehandler([...table, props.userData])\r\n      props.handler({\r\n        firstName: '',\r\n        lastName: '',\r\n        contact: '',\r\n      })\r\n    }\r\n  })\r\n\r\n  function edit(e) {\r\n    userIndex = e.target.value\r\n    props.handler({\r\n      firstName: table[userIndex].firstName,\r\n      lastName: table[userIndex].lastName,\r\n      contact: table[userIndex].contact,\r\n      add: false,\r\n    })\r\n    props.setEdit(true)\r\n  }\r\n\r\n  const deleteData = (e) => {\r\n    table.splice(parseInt(e.target.value), 1)\r\n    tablehandler([...table])\r\n  }\r\n\r\n  const list = table.map((element, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td className=\"table-data\"><p>{index+1}</p></td>\r\n        <td className=\"table-data\"><p>{element.firstName}</p></td>\r\n        <td className=\"table-data\"><p>{element.lastName}</p></td>\r\n        <td className=\"table-data\"><p>{element.contact}</p></td>\r\n        <td className=\"table-data\"><button value={index} onClick={edit}>Edit</button></td>\r\n        <td className=\"table-data\"><button value={index} onClick={deleteData}>Delete</button></td>\r\n      </tr>\r\n    )\r\n  })\r\n  return (\r\n    <>\r\n      <div className=\"table-container\">\r\n        <h1>Contact list</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"list-thead\">#</th>\r\n              <th className=\"list-thead\">First Name</th>\r\n              <th className=\"list-thead\">Last Name</th>\r\n              <th className=\"list-thead\">Contact</th>\r\n              <th className=\"list-thead\">Edit</th>\r\n              <th className=\"list-thead\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {list}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default Table","import React from 'react'\r\nimport './form.css'\r\nconst Form = (props) => {\r\n  function add(event) {\r\n    event.preventDefault()\r\n    const user = props.userFormData\r\n    if (user.firstName || user.lastName || user.contact) {\r\n      props.userFormHandler({ ...props.userFormData, add: true })\r\n    } else {\r\n      alert(\"form is empty\")\r\n    }\r\n  }\r\n\r\n  const update = () => {\r\n    props.setEdit(false)\r\n    props.userFormHandler({\r\n      firstName: '',\r\n      lastName: '',\r\n      contact: '',\r\n    })\r\n  }\r\n\r\n  const cancle = () => {\r\n    props.setEdit(false)\r\n    props.userFormHandler({\r\n      firstName: '',\r\n      lastName: '',\r\n      contact: '',\r\n    })\r\n  }\r\n  const error = ''\r\n  const contact = (event) => {\r\n    console.log(parseInt(event.target.value));\r\n    if (isNaN(parseInt(event.target.value))) {\r\n      alert(\"enter only numeric value\")\r\n    } else {\r\n      if (props.userFormData.contact.length > 10) {\r\n        alert('contact number limit exceeded')\r\n      }\r\n      else {\r\n        props.userFormHandler({\r\n          ...props.userFormData,\r\n          contact: event.target.value.trimStart()\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-container\">\r\n        <h1>Enter Contact Detail</h1>\r\n        <form onSubmit={add}>\r\n          <label>First Name :</label>\r\n          <input value={props.userFormData.firstName}\r\n            onChange={e => props.userFormHandler({ ...props.userFormData, firstName: e.target.value.trimStart() })} />\r\n          <label>Last Name :</label>\r\n          <input value={props.userFormData.lastName}\r\n            onChange={e => props.userFormHandler({ ...props.userFormData, lastName: e.target.value.trimStart() })} />\r\n          <label>Contact : </label>\r\n          <input value={props.userFormData.contact}\r\n            onChange={contact} />\r\n          {!props.edit && <button type=\"submit\">Submit</button>}\r\n          {props.edit &&\r\n            <div className=\"update-section\">\r\n              <button onClick={update}>Update</button>\r\n              <button onClick={cancle}>Cancel</button>\r\n            </div>\r\n          }\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default Form","import Form from \"./components/form-component/form\";\r\nimport Table from \"./components/table-component/table\";\r\nimport './App.css';\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [userForm, userFormHandler] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    contact: '',\r\n    add: false,\r\n  })\r\n  const [edit, setEdit] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-table-contaier\">\r\n        <Form\r\n          userFormData={userForm}\r\n          userFormHandler={userFormHandler}\r\n          edit={edit}\r\n          setEdit={setEdit} />\r\n        <Table\r\n          userData={userForm}\r\n          handler={userFormHandler}\r\n          edit={edit}\r\n          setEdit={setEdit} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}